Adding and returning inventory to and from store 
1. testing022.client1.localhost:8000/api/inventory/1/add-inventory/
2. testing022.client1.localhost:8000/api/inventory/1/remove-inventory/
[
  {
    "product_id": 40,
    "variant_id": 42,
    "quantity": 100,
    "lot_id": 47
  },
  { 
    "product_id": 40,
    "variant_id": 43,
    "quantity": 100
  }
]

Adding Product & Creating Inventory
3. testing022.client1.localhost:8000/api/products/add-product/
{
  "product_name": "Skirts",
  "category": 1,
  "unit": "",
  "threshold_value": 20,
  "currency": "LRD",
  "variants": [
    {
      "attributes": [
        {"name": "Color", "value": "Dark Brown"},
        {"name": "Size", "value": "M"}
      ],
      "lots": [
        {"quantity": 1000, "purchase_price": 10.00, "retail_selling_price": 90.00}
      ]
    },
     {
      "attributes": [
        {"name": "Color", "value": "Brown"},
        {"name": "Size", "value": "M"}
      ],
      "lots": [
        {"quantity": 2000, "purchase_price": 10.00, "retail_selling_price": 50.00}
      ]
    }
    
  ]
}

4. The main Inventory view testing022.client1.localhost:8000/api/inventory/main-inventory/
5. The store inventory view testing022.client1.localhost:8000/api/inventory/1/inventory/


sample Updating Product Data
6. testing022.client1.localhost:8000/api/products/42/update-product/ method=Patch
{
  "variants": [
    {
      "id":47,
      "lots": [
        {
          "id": 47,
          "quantity": 3000,
          "purchase_price": 150.00
        }
      ]
    }
  ]
}

7. Restocking
testing022.client1.localhost:8000/api/products/42/restock-product/
{
   "variant_id": 47, 
   "lots": [
    {
        "quantity": 60, 
        "purchase_price": 10.00, 
        "retail_selling_price": 80.00
  
    }
  ]
}

# In production, you can configure Django to use a cloud storage solution for handling media files.
# DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'




# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


